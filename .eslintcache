[{"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\reportWebVitals.js":"1","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\index.tsx":"2","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\App.tsx":"3","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\GlobalStyle.ts":"4","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\Home.tsx":"5","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Sidebar.tsx":"6","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\CharPage.tsx":"7","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Data.tsx":"8","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\SiteUsage.tsx":"9","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Main.tsx":"10","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\CommandDescription.tsx":"11","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\ContactForm.tsx":"12","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Info.tsx":"13","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\ExTabs.tsx":"14","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\TabInfo.tsx":"15","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\Table.tsx":"16"},{"size":375,"mtime":1619579956583,"results":"17","hashOfConfig":"18"},{"size":594,"mtime":1621135301551,"results":"19","hashOfConfig":"18"},{"size":2894,"mtime":1621152990121,"results":"20","hashOfConfig":"18"},{"size":207,"mtime":1621134908325,"results":"21","hashOfConfig":"18"},{"size":2820,"mtime":1621135348678,"results":"22","hashOfConfig":"18"},{"size":2001,"mtime":1621153078834,"results":"23","hashOfConfig":"18"},{"size":632,"mtime":1621146427074,"results":"24","hashOfConfig":"18"},{"size":3096,"mtime":1621152595223,"results":"25","hashOfConfig":"18"},{"size":1114,"mtime":1621135234914,"results":"26","hashOfConfig":"18"},{"size":507,"mtime":1621152996809,"results":"27","hashOfConfig":"18"},{"size":1704,"mtime":1621135259135,"results":"28","hashOfConfig":"18"},{"size":2270,"mtime":1621135254554,"results":"29","hashOfConfig":"18"},{"size":4051,"mtime":1621152657654,"results":"30","hashOfConfig":"18"},{"size":3294,"mtime":1621147934157,"results":"31","hashOfConfig":"18"},{"size":822,"mtime":1621148105788,"results":"32","hashOfConfig":"18"},{"size":1663,"mtime":1621152501356,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"3tz1mu",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\reportWebVitals.js",[],["73","74"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\index.tsx",[],["75","76"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\App.tsx",["77"],"import styled from 'styled-components';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from './components/Page/Home';\r\nimport Sidebar from './components/Sidebar';\r\nimport { useState } from 'react';\r\nimport Page from './components/Page/CharPage';\r\nimport Data from './components/Data';\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faBars,\r\n    faTimes,\r\n    IconDefinition,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { GlobalStyle } from './styles/GlobalStyle';\r\nimport { CharProps } from './types/CharProps';\r\n\r\nconst Wrapper = styled.div`\r\n    background: #e8e8e8;\r\n`;\r\n\r\nconst PageContent = styled.div`\r\n    position: absolute;\r\n    height: 100%;\r\n    width: calc(100% - 240px);\r\n    left: 240px;\r\n    background: #808080;\r\n    @media all and (max-width: 1140px) {\r\n        left: 0;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\ninterface MenuProps {\r\n    onClick: () => void;\r\n    icon: IconDefinition;\r\n}\r\n\r\nconst MenuButtonBlock = styled(FontAwesomeIcon)<MenuProps>`\r\n    position: fixed;\r\n    top: 2.5%;\r\n    left: 20px;\r\n    z-index: 999;\r\n    font-size: 20px;\r\n    color: #fff;\r\n    visibility: hidden;\r\n    @media all and (max-width: 1140px) {\r\n        visibility: visible;\r\n    }\r\n`;\r\n\r\nconst Overlay = styled.div<{ toggle: boolean }>`\r\n    width: 100%;\r\n    position: fixed;\r\n    height: 100%;\r\n    z-index: 996;\r\n    background: rgba(122, 122, 122, 0.5);\r\n    visibility: ${(props) => (props.toggle ? 'visible' : 'hidden')};\r\n`;\r\n\r\ntype Ops = {\r\n    [key: string]: Object;\r\n};\r\nfunction App() {\r\n    const [toggle, setToggle] = useState(false);\r\n    const Opdata: Ops = Data;\r\n    return (\r\n        <>\r\n            <title>Tekken_info 0.1.0</title>\r\n            <GlobalStyle />\r\n            <Wrapper>\r\n                <MenuButtonBlock\r\n                    icon={toggle ? faTimes : faBars}\r\n                    onClick={() => {\r\n                        setToggle(!toggle);\r\n                        console.log(toggle);\r\n                    }}\r\n                />\r\n                <Sidebar toggle={toggle} Data={Data} />\r\n                <Overlay\r\n                    toggle={toggle}\r\n                    onClick={() => {\r\n                        setToggle(!toggle);\r\n                        console.log(toggle);\r\n                    }}\r\n                />\r\n                <PageContent>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact={true} component={Home} />\r\n\r\n                        {Object.keys(Opdata).map((element, index) => (\r\n                            <Route key={index} path={`/${element}`}>\r\n                                <Page data={Opdata[element]} />\r\n                            </Route>\r\n                        ))}\r\n                    </Switch>\r\n                </PageContent>\r\n            </Wrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\GlobalStyle.ts",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\Home.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Sidebar.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\CharPage.tsx",["78"],"import React from 'react'\r\nimport Info from '../pageComponents/Info'\r\nimport Main from '../pageComponents/Main'\r\nimport styled from 'styled-components'\r\nimport { CharProps } from '../../types/CharProps'\r\n\r\nconst CharWrap = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    @media all and (max-width: 1140px) {\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst Page = ({ data }: any) => {\r\n    return (\r\n        <CharWrap>\r\n            <Info data={data.Info} />\r\n            <Main data={data} />\r\n        </CharWrap>\r\n    )\r\n}\r\n\r\nexport default Page\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Data.tsx",["79","80"],"import Akuma from \"../info/AkumaData.json\";\r\nimport Alisa from \"../info/AlisaData.json\";\r\nimport Anna from \"../info/AnnaData.json\";\r\nimport ArmorKing from \"../info/ArmorKingData.json\";\r\nimport Asuka from \"../info/AsukaData.json\";\r\nimport Bob from \"../info/BobData.json\";\r\nimport Bryan from \"../info/BryanData.json\";\r\nimport Claudio from \"../info/CladioData.json\";\r\nimport DevilJin from \"../info/DevilJinData.json\";\r\nimport Dragunov from \"../info/DragunovData.json\";\r\nimport Eddy from \"../info/EddyData.json\";\r\nimport Eliza from \"../info/ElizaData.json\";\r\nimport Feng from \"../info/FengData.json\";\r\nimport Geese from \"../info/GeeseData.json\";\r\nimport Gigas from \"../info/GigasData.json\";\r\nimport Jin from \"../info/JinData.json\";\r\nimport Josie from \"../info/JosieData.json\";\r\nimport Julia from \"../info/JuliaData.json\";\r\nimport Katarina from \"../info/KatarinaData.json\";\r\nimport Kazumi from \"../info/KazumiData.json\";\r\nimport Kazuya from \"../info/KazuyaData.json\";\r\nimport King from \"../info/KingData.json\";\r\nimport Kuma from \"../info/KumaData.json\";\r\nimport Lars from \"../info/LarsData.json\";\r\nimport Law from \"../info/LawData.json\";\r\nimport Lee from \"../info/LeeData.json\";\r\nimport Lei from \"../info/LeiData.json\";\r\nimport Leo from \"../info/LeoData.json\";\r\nimport Lili from \"../info/LiliData.json\";\r\nimport Lucky from \"../info/LuckyData.json\";\r\nimport Marduk from \"../info/MardukData.json\";\r\nimport MasterRaven from \"../info/MasterRavenData.json\";\r\nimport Miguel from \"../info/MiguelData.json\";\r\nimport Nina from \"../info/NinaData.json\";\r\nimport Paul from \"../info/PaulData.json\";\r\nimport Shaheen from \"../info/ShaheenData.json\";\r\nimport Steve from \"../info/SteveData.json\";\r\nimport Xiaoyu from \"../info/XiaoyuData.json\";\r\nimport Hworang from \"../info/HworangData.json\";\r\nimport Yoshimitsu from \"../info/YoshimitsuData.json\";\r\nimport Kunimitsu from \"../info/KunimitsuData.json\";\r\nimport Noctis from \"../info/NoctisData.json\";\r\nimport Negan from \"../info/NeganData.json\";\r\nimport Lidia from \"../info/LidiaData.json\";\r\nimport Heihachi from \"../info/HeihachiData.json\";\r\nimport { CharProps } from \"../types/CharProps\";\r\n\r\nconst CharData = {\r\n    Akuma: Akuma,\r\n    Alisa: Alisa,\r\n    Anna: Anna,\r\n    \"Armor King\": ArmorKing,\r\n    Asuka: Asuka,\r\n    Bob: Bob,\r\n    Bryan: Bryan,\r\n    Claudio: Claudio,\r\n    DevilJin: DevilJin,\r\n    Dragunov: Dragunov,\r\n    Eddy: Eddy,\r\n    Eliza: Eliza,\r\n    Feng: Feng,\r\n    Geese: Geese,\r\n    Gigas: Gigas,\r\n    Heihachi: Heihachi,\r\n    Hworang: Hworang,\r\n    Jin: Jin,\r\n    Josie: Josie,\r\n    Julia: Julia,\r\n    Katarina: Katarina,\r\n    Kazumi: Kazumi,\r\n    Kazuya: Kazuya,\r\n    King: King,\r\n    Kuma: Kuma,\r\n    Kunimitsu: Kunimitsu,\r\n    Lars: Lars,\r\n    Law: Law,\r\n    Lee: Lee,\r\n    Lei: Lei,\r\n    Leo: Leo,\r\n    Lidia: Lidia,\r\n    Lili: Lili,\r\n    Lucky: Lucky,\r\n    Marduk: Marduk,\r\n    MasterRaven: MasterRaven,\r\n    Miguel: Miguel,\r\n    Negan: Negan,\r\n    Nina: Nina,\r\n    Noctis: Noctis,\r\n    Paul: Paul,\r\n    Shaheen: Shaheen,\r\n    Steve: Steve,\r\n    Xiaoyu: Xiaoyu,\r\n    Yoshimitsu: Yoshimitsu,\r\n};\r\n\r\nconst temp = [Steve];\r\nexport default CharData;\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\SiteUsage.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Main.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\CommandDescription.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\ContactForm.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Info.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\ExTabs.tsx",["81"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport styled from 'styled-components';\r\nimport TabInfo from './TabInfo';\r\nconst TabPanelBlock = styled.div<{ shown: boolean }>`\r\n    ${({ shown }) => (shown ? `width:100%;  height:90%;` : 'width:0%')};\r\n    overflow-y: scroll;\r\n    -ms-overflow-style: none; /* IE and Edge */\r\n    scrollbar-width: none; /* Firefox */\r\n    ::-webkit-scrollbar {\r\n        display: none; /* Chrome, Safari, Opera*/\r\n    }\r\n`;\r\n\r\ninterface PanelProps {\r\n    children: any;\r\n    value: number;\r\n    index: number;\r\n}\r\n\r\nfunction TabPanel(props: PanelProps) {\r\n    const { children, value, index } = props;\r\n\r\n    return (\r\n        <TabPanelBlock\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            shown={value === index}\r\n        >\r\n            {value === index && <>{children} </>}\r\n        </TabPanelBlock>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst Root = styled.div`\r\n    flex-grow: 1;\r\n`;\r\nconst TabsBlock = styled(Tabs)`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: center;\r\n`;\r\nconst TabBlock = styled(Tab)`\r\n    flex: 1 1 auto;\r\n`;\r\n\r\ninterface TabsProps {\r\n    Data: any;\r\n}\r\n\r\ninterface dataProps {\r\n    header: string;\r\n    columns: string[];\r\n    data: any;\r\n}\r\n\r\nexport default function VerticalTabs({ Data }: TabsProps) {\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event: any, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const PunishInfo = [\r\n        {\r\n            header: '선자세 딜캐',\r\n            columns: ['프레임', '커맨드', '데미지', '판정', '히트이득'],\r\n            data: Data.standing,\r\n        },\r\n        {\r\n            header: '앉은자세 딜캐',\r\n            columns: ['프레임', '커맨드', '데미지', '판정', '히트이득'],\r\n            data: Data.up,\r\n        },\r\n    ];\r\n\r\n    const ThrowInfo = [\r\n        {\r\n            header: '잡기',\r\n            columns: ['커맨드', '프레임', '잡기풀기', '데미지', '설명'],\r\n            data: Data.Throw,\r\n        },\r\n    ];\r\n\r\n    const ComboInfo = [\r\n        {\r\n            header: '추가타',\r\n            columns: ['상황', '커맨드'],\r\n            data: Data.combo,\r\n        },\r\n        {\r\n            header: '추가타',\r\n            columns: ['상황', '커맨드'],\r\n            data: Data.Extrahit,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Root>\r\n            <TabsBlock value={value} onChange={handleChange} centered>\r\n                <TabBlock label=\"딜레이캐치\" />\r\n                <TabBlock label=\"콤보\" />\r\n                <TabBlock label=\"잡기\" />\r\n            </TabsBlock>\r\n            <TabPanel value={value} index={0}>\r\n                <TabInfo data={PunishInfo} />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <TabInfo data={ComboInfo} />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <TabInfo data={ThrowInfo} />\r\n            </TabPanel>\r\n        </Root>\r\n    );\r\n}\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\TabInfo.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\Table.tsx",["82","83"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Standing, Up } from '../../types/CharProps';\r\n\r\nconst TableContent = styled.table`\r\n    width: 90%;\r\n    border: 1px solid black;\r\n    border-collapse: collapse;\r\n    margin: 0 auto;\r\n    margin-bottom: 50px;\r\n`;\r\n\r\nconst TableHead = styled.th`\r\n    text-align: left;\r\n    padding: 5px;\r\n    border: 1px solid black;\r\n    border-collapse: collapse;\r\n`;\r\nconst TableRow = styled.tr`\r\n    padding: 5px;\r\n`;\r\nconst TableData = styled.td`\r\n    border: 1px solid black;\r\n    border-collapse: collapse;\r\n    padding: 5px;\r\n`;\r\n\r\ninterface dataProps {\r\n    header: string;\r\n    columns: string[];\r\n    data: any;\r\n}\r\n\r\nconst Table = ({ header, columns, data }: dataProps) => {\r\n    return (\r\n        <>\r\n            <h2>{header}</h2>\r\n            <TableContent>\r\n                <thead>\r\n                    <TableRow>\r\n                        {columns.map((column) => (\r\n                            <TableHead key={header + column}>\r\n                                {column}\r\n                            </TableHead>\r\n                        ))}\r\n                    </TableRow>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map((row: any, index: number) => (\r\n                        <TableRow key={index}>\r\n                            {Object.values(row).map((content: any, i) => (\r\n                                <TableData key={i}>{content}</TableData>\r\n                            ))}\r\n                        </TableRow>\r\n                    ))}\r\n                </tbody>\r\n            </TableContent>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":16,"column":10,"nodeType":"90","messageId":"91","endLine":16,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":5,"column":10,"nodeType":"90","messageId":"91","endLine":5,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":46,"column":10,"nodeType":"90","messageId":"91","endLine":46,"endColumn":19},{"ruleId":"88","severity":1,"message":"92","line":96,"column":7,"nodeType":"90","messageId":"91","endLine":96,"endColumn":11},{"ruleId":"88","severity":1,"message":"93","line":59,"column":11,"nodeType":"90","messageId":"91","endLine":59,"endColumn":20},{"ruleId":"88","severity":1,"message":"94","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":18},{"ruleId":"88","severity":1,"message":"95","line":3,"column":20,"nodeType":"90","messageId":"91","endLine":3,"endColumn":22},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"@typescript-eslint/no-unused-vars","'CharProps' is defined but never used.","Identifier","unusedVar","'temp' is assigned a value but never used.","'dataProps' is defined but never used.","'Standing' is defined but never used.","'Up' is defined but never used.","no-global-assign","no-unsafe-negation"]