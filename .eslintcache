[{"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\reportWebVitals.js":"1","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\index.tsx":"2","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\App.tsx":"3","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\GlobalStyle.ts":"4","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\Home.tsx":"5","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Sidebar.tsx":"6","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\CharPage.tsx":"7","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\SiteUsage.tsx":"8","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Main.tsx":"9","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\CommandDescription.tsx":"10","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\ContactForm.tsx":"11","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Info.tsx":"12","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\ExTabs.tsx":"13","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\TabInfo.tsx":"14","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\Table.tsx":"15","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\firebaseInit.tsx":"16","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\TableRow.tsx":"17","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\Error.tsx":"18","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Modal.tsx":"19","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\DBContext.tsx":"20","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\ModalContext.tsx":"21","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\Button.tsx":"22","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\customTheme.ts":"23","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\TableEdits.tsx":"24","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\TableEdit.tsx":"25","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\hooks\\useInputValue.ts":"26","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\Icon.tsx":"27"},{"size":375,"mtime":1619579956583,"results":"28","hashOfConfig":"29"},{"size":1301,"mtime":1625400670220,"results":"30","hashOfConfig":"29"},{"size":3754,"mtime":1625465966423,"results":"31","hashOfConfig":"29"},{"size":207,"mtime":1621134908325,"results":"32","hashOfConfig":"29"},{"size":2820,"mtime":1621135348678,"results":"33","hashOfConfig":"29"},{"size":2042,"mtime":1625400670172,"results":"34","hashOfConfig":"29"},{"size":992,"mtime":1625400670159,"results":"35","hashOfConfig":"29"},{"size":1120,"mtime":1625400670199,"results":"36","hashOfConfig":"29"},{"size":615,"mtime":1625400670193,"results":"37","hashOfConfig":"29"},{"size":1704,"mtime":1621135259135,"results":"38","hashOfConfig":"29"},{"size":1574,"mtime":1625400670178,"results":"39","hashOfConfig":"29"},{"size":4115,"mtime":1625400670185,"results":"40","hashOfConfig":"29"},{"size":4137,"mtime":1625463817067,"results":"41","hashOfConfig":"29"},{"size":698,"mtime":1625400670080,"results":"42","hashOfConfig":"29"},{"size":4750,"mtime":1625471958582,"results":"43","hashOfConfig":"29"},{"size":501,"mtime":1625400670207,"results":"44","hashOfConfig":"29"},{"size":2924,"mtime":1625471846810,"results":"45","hashOfConfig":"29"},{"size":641,"mtime":1625400670166,"results":"46","hashOfConfig":"29"},{"size":3302,"mtime":1625400670144,"results":"47","hashOfConfig":"29"},{"size":8299,"mtime":1625463575147,"results":"48","hashOfConfig":"29"},{"size":2294,"mtime":1625400670068,"results":"49","hashOfConfig":"29"},{"size":714,"mtime":1625465620757,"results":"50","hashOfConfig":"29"},{"size":683,"mtime":1625471907998,"results":"51","hashOfConfig":"29"},{"size":2006,"mtime":1625471760181,"results":"52","hashOfConfig":"29"},{"size":1180,"mtime":1625400670095,"results":"53","hashOfConfig":"29"},{"size":449,"mtime":1625400670214,"results":"54","hashOfConfig":"29"},{"size":634,"mtime":1625471682508,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"10ijnji",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\reportWebVitals.js",[],["115","116"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\index.tsx",[],["117","118"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\App.tsx",["119","120","121","122"],"import styled from 'styled-components';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport Home from './components/Page/Home';\r\nimport Sidebar from './components/Sidebar';\r\nimport { useState } from 'react';\r\nimport Page from './components/Page/CharPage';\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faBars,\r\n    faTimes,\r\n    IconDefinition,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { GlobalStyle } from './styles/GlobalStyle';\r\nimport { AddProperty, RemoveProperty, useDBData } from './Context/DBContext';\r\nimport Error from './components/Page/Error';\r\nimport Modal from './components/Modal';\r\nimport { useModalData } from './Context/ModalContext';\r\nimport CustomIcon from './styles/Icon';\r\nconst Wrapper = styled.div`\r\n    background: #e8e8e8;\r\n`;\r\n\r\nconst PageContent = styled.div`\r\n    position: absolute;\r\n    height: 100%;\r\n    width: calc(100% - 240px);\r\n    left: 240px;\r\n    background: #808080;\r\n    @media all and (max-width: 1140px) {\r\n        left: 0;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\ninterface MenuProps {\r\n    onClick: () => void;\r\n    icon: IconDefinition;\r\n}\r\n\r\nconst MenuButtonBlock = styled(CustomIcon)<MenuProps>`\r\n    position: fixed;\r\n    top: 2.5%;\r\n    left: 20px;\r\n    z-index: 999;\r\n    font-size: 20px;\r\n    color: #fff;\r\n    visibility: hidden;\r\n    @media all and (max-width: 1140px) {\r\n        visibility: visible;\r\n    }\r\n`;\r\n\r\nconst Overlay = styled.div<{ toggle: boolean }>`\r\n    width: 100%;\r\n    position: fixed;\r\n    height: 100%;\r\n    z-index: 996;\r\n    background: rgba(122, 122, 122, 0.5);\r\n    visibility: ${(props) => (props.toggle ? 'visible' : 'hidden')};\r\n`;\r\n\r\nconst CharNames = [\r\n    'Akuma',\r\n    'Alisa',\r\n    'Anna',\r\n    'ArmorKing',\r\n    'Asuka',\r\n    'Bob',\r\n    'Bryan',\r\n    'Cladio',\r\n    'DevilJin',\r\n    'Dragunov',\r\n    'Eddy',\r\n    'Eliza',\r\n    'Feng',\r\n    'Geese',\r\n    'Gigas',\r\n    'Heihachi',\r\n    'Hworang',\r\n    'Jack7',\r\n    'Jin',\r\n    'Josie',\r\n    'Julia',\r\n    'Katarina',\r\n    'Kazumi',\r\n    'Kazuya',\r\n    'King',\r\n    'Kuma',\r\n    'Kunimitsu',\r\n    'Lars',\r\n    'Law',\r\n    'Lee',\r\n    'Lei',\r\n    'Leo',\r\n    'Lidia',\r\n    'Lili',\r\n    'Lucky',\r\n    'Marduk',\r\n    'MasterRaven',\r\n    'Miguel',\r\n    'Negan',\r\n    'Nina',\r\n    'Noctis',\r\n    'Paul',\r\n    'Shaheen',\r\n    'Steve',\r\n    'Xiaoyu',\r\n    'Yoshimitsu',\r\n];\r\n\r\nfunction App() {\r\n    const [toggle, setToggle] = useState(false);\r\n    const { loading, error } = useDBData();\r\n    const { open } = useModalData();\r\n\r\n    return (\r\n        <>\r\n            <title>Tekken_info 0.1.0</title>\r\n            <GlobalStyle />\r\n            <Wrapper>\r\n                <MenuButtonBlock\r\n                    icon={toggle ? faTimes : faBars}\r\n                    onClick={() => {\r\n                        setToggle(!toggle);\r\n                    }}\r\n                />\r\n                <Sidebar toggle={toggle} Data={CharNames} />\r\n                <Overlay\r\n                    toggle={toggle}\r\n                    onClick={() => {\r\n                        setToggle(!toggle);\r\n                    }}\r\n                />\r\n\r\n                <PageContent>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact={true} component={Home} />\r\n\r\n                        <Route path=\"/data/:char\" exact={true}>\r\n                            {error ? <Redirect to=\"/404\" /> : <Page />}\r\n                        </Route>\r\n                        <Route path=\"/404\" exact={true}>\r\n                            <Error />\r\n                        </Route>\r\n                    </Switch>\r\n                </PageContent>\r\n                {open && <Modal />}\r\n            </Wrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\GlobalStyle.ts",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\Home.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Sidebar.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\CharPage.tsx",["123"],"import React, { useEffect } from 'react';\r\nimport Info from '../pageComponents/Info';\r\nimport Main from '../pageComponents/Main';\r\nimport styled from 'styled-components';\r\nimport { useParams } from 'react-router';\r\nimport { LoadData, useDBData, useDBDispatch } from '../../Context/DBContext';\r\n\r\nconst CharWrap = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    @media all and (max-width: 1140px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst Page = () => {\r\n    let { char }: { char: string } = useParams();\r\n    const charName = char.substring(1);\r\n    const tempdata = useDBData().charProps;\r\n    const tempDispatch = useDBDispatch();\r\n    useEffect(() => {\r\n        LoadData(charName, tempDispatch);\r\n    }, [charName]);\r\n\r\n    return (\r\n        <CharWrap>\r\n            <Info data={tempdata?.Info} />\r\n            <Main data={tempdata!} />\r\n        </CharWrap>\r\n    );\r\n};\r\n\r\nexport default Page;\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\SiteUsage.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Main.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\CommandDescription.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\ContactForm.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Info.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\ExTabs.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\TabInfo.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\Table.tsx",["124","125","126"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\firebaseInit.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\TableRow.tsx",["127","128","129"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\Error.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Modal.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\DBContext.tsx",["130"],"import firebase from 'firebase';\r\nimport React, { createContext, Dispatch, useContext, useReducer } from 'react';\r\nimport { updateProperty } from 'typescript';\r\nimport db from '../firebaseInit';\r\nimport { CharProps } from '../types/CharProps';\r\n\r\ninterface StateProps {\r\n    charProps: CharProps;\r\n    loading: boolean;\r\n    error: any;\r\n}\r\n\r\nconst InitialState: StateProps = {\r\n    charProps: {\r\n        standing: [],\r\n        up: [],\r\n        combo: [],\r\n        WallCombo: [],\r\n        Throw: [],\r\n        Extrahit: [],\r\n        Info: [],\r\n    },\r\n    loading: false,\r\n    error: null,\r\n};\r\n\r\ntype Action =\r\n    | { type: 'LOAD'; payload: any }\r\n    | { type: 'ADD' }\r\n    | { type: 'ERROR'; error: any };\r\n\r\ntype StateDispatch = Dispatch<Action>;\r\n\r\nconst DataContext = createContext<StateProps | null>(null);\r\nconst DataDispatchContext = createContext<StateDispatch | null>(null);\r\n\r\nexport function LoadData(char: string, dispatch: React.Dispatch<any>) {\r\n    const Loader = async () => {\r\n        const order = (arr: any[], ordering?: (a: any, b: any) => number) => {\r\n            return arr.map((cur: { [key: string]: string }) =>\r\n                Object.keys(cur)\r\n                    .sort(ordering)\r\n                    .reduce((obj: any, key: string) => {\r\n                        obj[key] = cur[key];\r\n                        return obj;\r\n                    }, {})\r\n            );\r\n        };\r\n        const frameOrder = (a: any, b: any) => {\r\n            const order = [\r\n                'frame',\r\n                'command',\r\n                'damage',\r\n                'range',\r\n                'hitframe',\r\n                'state',\r\n            ];\r\n            return order.indexOf(a) - order.indexOf(b);\r\n        };\r\n\r\n        try {\r\n            const data = await db\r\n                .collection('Character')\r\n                .doc(char)\r\n                .get()\r\n                .then((snap) => {\r\n                    return snap.data() as CharProps;\r\n                });\r\n\r\n            data.combo = order(data.combo);\r\n            data.WallCombo = order(data.combo);\r\n            data.Throw = order(data.Throw);\r\n            data.up = order(data.up, frameOrder);\r\n            data.standing = order(data.standing, frameOrder);\r\n            data.Extrahit = order(data.Extrahit);\r\n            dispatch({ type: 'LOAD', payload: data });\r\n        } catch (err) {\r\n            dispatch({ type: 'ERROR', error: err });\r\n        }\r\n    };\r\n    Loader();\r\n}\r\n\r\nexport const AddData = async (tag: string, data: Object, char: string) => {\r\n    try {\r\n        db.collection('Character')\r\n            .doc(char)\r\n            .update({\r\n                [tag]: firebase.firestore.FieldValue.arrayUnion(data),\r\n            });\r\n    } catch (err) {\r\n        alert('정보를 삭제하는데 실패했습니다');\r\n        console.log('에러정보 ' + err);\r\n    }\r\n};\r\n\r\nexport async function DeleteData(tag: string, data: Object, char: string) {\r\n    try {\r\n        await db\r\n            .collection('Character')\r\n            .doc(char)\r\n            .update({\r\n                [tag]: firebase.firestore.FieldValue.arrayRemove(data),\r\n            });\r\n    } catch (err) {\r\n        alert('정보를 삭제하는데 실패했습니다');\r\n        console.log('에러정보 ' + err);\r\n    }\r\n}\r\n\r\nexport async function AddProperty() {\r\n    const arr: any = {\r\n        Extrahit: ['state', 'command'],\r\n        combo: ['state', 'command'],\r\n        WallCombo: ['state', 'command'],\r\n        up: ['frame', 'command', 'damage', 'range', 'hitframe', 'state'],\r\n        standing: ['frame', 'command', 'damage', 'range', 'hitframe', 'state'],\r\n        Throw: ['command', 'damage', 'frame', 'state', 'way'],\r\n        Info: ['combo', 'dc', 'name', 'punish'],\r\n    };\r\n    const updateProperty = async (id: string) => {\r\n        try {\r\n            const data = await db\r\n                .collection('Character')\r\n                .doc(id)\r\n                .get()\r\n                .then((snap) => {\r\n                    return snap.data() as CharProps;\r\n                });\r\n            const newData = Object.keys(data).reduce((acc: any, cur) => {\r\n                acc[cur] = data[cur].map((content: any) => {\r\n                    arr[cur].forEach((item: any) => {\r\n                        content = !content.hasOwnProperty(item)\r\n                            ? { ...content, [item]: '' }\r\n                            : content;\r\n                    });\r\n                    return content;\r\n                });\r\n                return acc;\r\n            }, {});\r\n            try {\r\n                await db.collection('Character').doc(id).update(newData);\r\n            } catch (err) {\r\n                alert(id + '의 정보를 받아오는데 실패했습니다');\r\n                console.log('에러 정보' + err);\r\n            }\r\n        } catch (err) {\r\n            alert(id + '의 정보를 업데이트하는데 실패했습니다');\r\n            console.log('에러 정보' + err);\r\n        }\r\n    };\r\n    try {\r\n        const documents = await db.collection('Character').get();\r\n\r\n        documents.forEach((document) => {\r\n            updateProperty(document.id);\r\n        });\r\n    } catch (err) {\r\n        alert('캐릭터들의 정보를 받아오는데 실패했습니다');\r\n        console.log('에러 정보' + err);\r\n    }\r\n}\r\n\r\nexport async function RemoveProperty(category: string, property: string) {\r\n    const deleteProperty = async (id: string) => {\r\n        try {\r\n            const data = await db\r\n                .collection('Character')\r\n                .doc(id)\r\n                .get()\r\n                .then((snap) => {\r\n                    return snap.data() as CharProps;\r\n                });\r\n            const delObj = data[category];\r\n            const newData = delObj.map((item: any) => {\r\n                return Object.keys(item)\r\n                    .filter((key) => key !== property)\r\n                    .reduce((acc: any, cur) => {\r\n                        acc[cur] = item[cur];\r\n                        return acc;\r\n                    }, {});\r\n            });\r\n            try {\r\n                await db\r\n                    .collection('Character')\r\n                    .doc(id)\r\n                    .update({\r\n                        [category]: newData,\r\n                    });\r\n            } catch (err) {\r\n                alert(id + '의 정보를 받아오는데 실패했습니다');\r\n                console.log('에러 정보' + err);\r\n            }\r\n        } catch (err) {\r\n            alert(id + '의 정보를 업데이트하는데 실패했습니다');\r\n            console.log('에러 정보' + err);\r\n        }\r\n    };\r\n    try {\r\n        const documents = await db.collection('Character').get();\r\n\r\n        documents.forEach((document) => {\r\n            deleteProperty(document.id);\r\n        });\r\n    } catch (err) {\r\n        alert('캐릭터들의 정보를 받아오는데 실패했습니다');\r\n        console.log('에러 정보' + err);\r\n    }\r\n}\r\n\r\nexport async function EditData(\r\n    tag: string,\r\n    old: Object,\r\n    newData: Object,\r\n    char: string\r\n) {\r\n    DeleteData(tag, old, char);\r\n    AddData(tag, newData, char);\r\n}\r\n\r\nfunction reducer(state: StateProps, action: Action) {\r\n    switch (action.type) {\r\n        case 'LOAD':\r\n            return {\r\n                ...state,\r\n                charProps: action.payload,\r\n            };\r\n        case 'ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function StateProvider({ children }: { children: React.ReactNode }) {\r\n    const [state, dispatch] = useReducer(reducer, InitialState);\r\n    return (\r\n        <DataContext.Provider value={state}>\r\n            <DataDispatchContext.Provider value={dispatch}>\r\n                {children}\r\n            </DataDispatchContext.Provider>\r\n        </DataContext.Provider>\r\n    );\r\n}\r\nexport function useDBData() {\r\n    const data = useContext(DataContext);\r\n    if (!data) throw new Error('Cannot find Provider');\r\n    return data;\r\n}\r\nexport function useDBDispatch() {\r\n    const dispatch = useContext(DataDispatchContext);\r\n    if (!dispatch) throw new Error('Cannot find Provider');\r\n    return dispatch;\r\n}\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\ModalContext.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\Button.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\customTheme.ts",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\TableEdits.tsx",["131","132"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\TableEdit.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\hooks\\useInputValue.ts",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\Icon.tsx",["133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":25},{"ruleId":"138","severity":1,"message":"142","line":15,"column":10,"nodeType":"140","messageId":"141","endLine":15,"endColumn":21},{"ruleId":"138","severity":1,"message":"143","line":15,"column":23,"nodeType":"140","messageId":"141","endLine":15,"endColumn":37},{"ruleId":"138","severity":1,"message":"144","line":114,"column":13,"nodeType":"140","messageId":"141","endLine":114,"endColumn":20},{"ruleId":"145","severity":1,"message":"146","line":26,"column":8,"nodeType":"147","endLine":26,"endColumn":18,"suggestions":"148"},{"ruleId":"138","severity":1,"message":"149","line":10,"column":10,"nodeType":"140","messageId":"141","endLine":10,"endColumn":19},{"ruleId":"138","severity":1,"message":"150","line":11,"column":8,"nodeType":"140","messageId":"141","endLine":11,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":94,"column":44,"nodeType":"153","messageId":"154","endLine":94,"endColumn":45},{"ruleId":"138","severity":1,"message":"155","line":4,"column":5,"nodeType":"140","messageId":"141","endLine":4,"endColumn":12},{"ruleId":"138","severity":1,"message":"156","line":5,"column":5,"nodeType":"140","messageId":"141","endLine":5,"endColumn":15},{"ruleId":"145","severity":1,"message":"157","line":38,"column":8,"nodeType":"147","endLine":38,"endColumn":13,"suggestions":"158"},{"ruleId":"138","severity":1,"message":"159","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":24},{"ruleId":"138","severity":1,"message":"160","line":3,"column":18,"nodeType":"140","messageId":"141","endLine":3,"endColumn":30},{"ruleId":"138","severity":1,"message":"161","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":22},{"ruleId":"138","severity":1,"message":"162","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":15},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"@typescript-eslint/no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","'AddProperty' is defined but never used.","'RemoveProperty' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tempDispatch'. Either include it or remove the dependency array.","ArrayExpression",["165"],"'faPalette' is defined but never used.","'customTheme' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'faTrash' is defined but never used.","'faTrashAlt' is defined but never used.","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["166"],"'updateProperty' is defined but never used.","'DefaultTheme' is defined but never used.","'TableControl' is defined but never used.","'Props' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [charName, tempDispatch]",{"range":"171","text":"172"},"Update the dependencies array to be: [row, setValue]",{"range":"173","text":"174"},[802,812],"[charName, tempDispatch]",[1085,1090],"[row, setValue]"]