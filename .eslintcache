[{"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\reportWebVitals.js":"1","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\index.tsx":"2","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\App.tsx":"3","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\GlobalStyle.ts":"4","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\Home.tsx":"5","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Sidebar.tsx":"6","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\CharPage.tsx":"7","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Data.tsx":"8","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\SiteUsage.tsx":"9","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Main.tsx":"10","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\CommandDescription.tsx":"11","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\ContactForm.tsx":"12","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Info.tsx":"13","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\ExTabs.tsx":"14","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\TabInfo.tsx":"15","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\Table.tsx":"16","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\firebaseInit.tsx":"17"},{"size":375,"mtime":1619579956583,"results":"18","hashOfConfig":"19"},{"size":594,"mtime":1621135301551,"results":"20","hashOfConfig":"19"},{"size":4964,"mtime":1624538227494,"results":"21","hashOfConfig":"19"},{"size":207,"mtime":1621134908325,"results":"22","hashOfConfig":"19"},{"size":2820,"mtime":1621135348678,"results":"23","hashOfConfig":"19"},{"size":2439,"mtime":1624524105421,"results":"24","hashOfConfig":"19"},{"size":730,"mtime":1624416159902,"results":"25","hashOfConfig":"19"},{"size":3073,"mtime":1621210251432,"results":"26","hashOfConfig":"19"},{"size":1114,"mtime":1621135234914,"results":"27","hashOfConfig":"19"},{"size":507,"mtime":1621152996809,"results":"28","hashOfConfig":"19"},{"size":1704,"mtime":1621135259135,"results":"29","hashOfConfig":"19"},{"size":2270,"mtime":1621135254554,"results":"30","hashOfConfig":"19"},{"size":3888,"mtime":1624416390185,"results":"31","hashOfConfig":"19"},{"size":3294,"mtime":1621147934157,"results":"32","hashOfConfig":"19"},{"size":786,"mtime":1624522974236,"results":"33","hashOfConfig":"19"},{"size":1663,"mtime":1621152501356,"results":"34","hashOfConfig":"19"},{"size":501,"mtime":1624515459430,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"10ijnji",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\reportWebVitals.js",[],["78","79"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\index.tsx",[],["80","81"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\App.tsx",["82","83","84"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\GlobalStyle.ts",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\Home.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Sidebar.tsx",["85"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { Ops } from '../types/CharProps';\r\nconst Wrapper = styled.div<{ toggle: boolean }>`\r\n    width: 240px;\r\n    background: #212529;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n    -ms-overflow-style: none;\r\n    flex-direction: column;\r\n    transition: all 0.1s;\r\n\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n\r\n    @media all and (max-width: 1140px) {\r\n        width: 240px;\r\n        left: ${(props) => (props.toggle ? '0' : '-240px')};\r\n        z-index: 997;\r\n    }\r\n\r\n    .Main {\r\n        width: 100%;\r\n        height: 60px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        a {\r\n            text-decoration: none;\r\n            color: #fff;\r\n        }\r\n    }\r\n`;\r\n\r\nconst SideItemLink = styled.li`\r\n    display: flex;\r\n    padding: 0;\r\n    a {\r\n        width: 100%;\r\n        padding-left: 30px;\r\n        color: white;\r\n        line-height: 3;\r\n        user-select: none;\r\n        cursor: pointer;\r\n        text-decoration: none;\r\n        &:active,\r\n        &:link,\r\n        &:hover {\r\n            color: #fff;\r\n        }\r\n    }\r\n    &:hover {\r\n        background: #333;\r\n        color: #fff;\r\n    }\r\n`;\r\n\r\ninterface itemProps {\r\n    path: string;\r\n    onCharChange: (text: string) => void;\r\n}\r\n\r\nconst SidebarItem = ({ path, onCharChange }: itemProps) => {\r\n    const checkedPath = path.replace('_', ' ');\r\n    const handleChange = () => {\r\n        onCharChange(path);\r\n    };\r\n    return (\r\n        <SideItemLink onClick={handleChange}>\r\n            <Link to=\"/data\">{checkedPath}</Link>\r\n        </SideItemLink>\r\n    );\r\n};\r\n\r\ninterface Props {\r\n    toggle: boolean;\r\n    Data: string[];\r\n    onCharChange: (text: string) => void;\r\n}\r\n\r\nconst Sidebar = ({ toggle, Data, onCharChange }: Props) => {\r\n    return (\r\n        <Wrapper toggle={toggle}>\r\n            <div className=\"Main\">\r\n                <Link to=\"/\">Tekken-Info</Link>\r\n            </div>\r\n            {Data.map((element, index) => {\r\n                return (\r\n                    <SidebarItem\r\n                        path={element}\r\n                        key={index}\r\n                        onCharChange={onCharChange}\r\n                    />\r\n                );\r\n            })}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\CharPage.tsx",["86","87"],"import React from 'react'\r\nimport Info from '../pageComponents/Info'\r\nimport Main from '../pageComponents/Main'\r\nimport styled from 'styled-components'\r\nimport { CharProps } from '../../types/CharProps'\r\nimport { InfoProps } from '../../types/CharProps'\r\nconst CharWrap = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    @media all and (max-width: 1140px) {\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\ninterface PageProps {\r\n    data: any\r\n}\r\n\r\nconst Page = ({ data }: PageProps) => {\r\n    return (\r\n        <CharWrap>\r\n            <Info data={data.Info} />\r\n            <Main data={data} />\r\n        </CharWrap>\r\n    )\r\n}\r\n\r\nexport default Page\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Data.tsx",["88"],"import Akuma from '../info/AkumaData.json';\r\nimport Alisa from '../info/AlisaData.json';\r\nimport Anna from '../info/AnnaData.json';\r\nimport ArmorKing from '../info/ArmorKingData.json';\r\nimport Asuka from '../info/AsukaData.json';\r\nimport Bob from '../info/BobData.json';\r\nimport Bryan from '../info/BryanData.json';\r\nimport Claudio from '../info/CladioData.json';\r\nimport DevilJin from '../info/DevilJinData.json';\r\nimport Dragunov from '../info/DragunovData.json';\r\nimport Eddy from '../info/EddyData.json';\r\nimport Eliza from '../info/ElizaData.json';\r\nimport Feng from '../info/FengData.json';\r\nimport Geese from '../info/GeeseData.json';\r\nimport Gigas from '../info/GigasData.json';\r\nimport Jin from '../info/JinData.json';\r\nimport Josie from '../info/JosieData.json';\r\nimport Julia from '../info/JuliaData.json';\r\nimport Katarina from '../info/KatarinaData.json';\r\nimport Kazumi from '../info/KazumiData.json';\r\nimport Kazuya from '../info/KazuyaData.json';\r\nimport King from '../info/KingData.json';\r\nimport Kuma from '../info/KumaData.json';\r\nimport Lars from '../info/LarsData.json';\r\nimport Law from '../info/LawData.json';\r\nimport Lee from '../info/LeeData.json';\r\nimport Lei from '../info/LeiData.json';\r\nimport Leo from '../info/LeoData.json';\r\nimport Lili from '../info/LiliData.json';\r\nimport Lucky from '../info/LuckyData.json';\r\nimport Marduk from '../info/MardukData.json';\r\nimport MasterRaven from '../info/MasterRavenData.json';\r\nimport Miguel from '../info/MiguelData.json';\r\nimport Nina from '../info/NinaData.json';\r\nimport Paul from '../info/PaulData.json';\r\nimport Shaheen from '../info/ShaheenData.json';\r\nimport Steve from '../info/SteveData.json';\r\nimport Xiaoyu from '../info/XiaoyuData.json';\r\nimport Hworang from '../info/HworangData.json';\r\nimport Yoshimitsu from '../info/YoshimitsuData.json';\r\nimport Kunimitsu from '../info/KunimitsuData.json';\r\nimport Noctis from '../info/NoctisData.json';\r\nimport Negan from '../info/NeganData.json';\r\nimport Lidia from '../info/LidiaData.json';\r\nimport Heihachi from '../info/HeihachiData.json';\r\nimport { CharProps } from '../types/CharProps';\r\n\r\nconst CharData = {\r\n    Akuma: Akuma,\r\n    Alisa: Alisa,\r\n    Anna: Anna,\r\n    'Armor King': ArmorKing,\r\n    Asuka: Asuka,\r\n    Bob: Bob,\r\n    Bryan: Bryan,\r\n    Claudio: Claudio,\r\n    DevilJin: DevilJin,\r\n    Dragunov: Dragunov,\r\n    Eddy: Eddy,\r\n    Eliza: Eliza,\r\n    Feng: Feng,\r\n    Geese: Geese,\r\n    Gigas: Gigas,\r\n    Heihachi: Heihachi,\r\n    Hworang: Hworang,\r\n    Jin: Jin,\r\n    Josie: Josie,\r\n    Julia: Julia,\r\n    Katarina: Katarina,\r\n    Kazumi: Kazumi,\r\n    Kazuya: Kazuya,\r\n    King: King,\r\n    Kuma: Kuma,\r\n    Kunimitsu: Kunimitsu,\r\n    Lars: Lars,\r\n    Law: Law,\r\n    Lee: Lee,\r\n    Lei: Lei,\r\n    Leo: Leo,\r\n    Lidia: Lidia,\r\n    Lili: Lili,\r\n    Lucky: Lucky,\r\n    Marduk: Marduk,\r\n    MasterRaven: MasterRaven,\r\n    Miguel: Miguel,\r\n    Negan: Negan,\r\n    Nina: Nina,\r\n    Noctis: Noctis,\r\n    Paul: Paul,\r\n    Shaheen: Shaheen,\r\n    Steve: Steve,\r\n    Xiaoyu: Xiaoyu,\r\n    Yoshimitsu: Yoshimitsu,\r\n};\r\n\r\nexport default CharData;\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\SiteUsage.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Main.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\CommandDescription.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\ContactForm.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Info.tsx",["89"],"import styled from 'styled-components';\r\n\r\nimport React from 'react';\r\nimport { InfoProps } from '../../types/CharProps';\r\nconst InfoWrapper = styled.div`\r\n    display: flex;\r\n    background: #fff;\r\n    height: 90%;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    @media all and (max-width: 1140px) {\r\n        height: 50px;\r\n        line-height: 50px;\r\n        width: 100%;\r\n        border-bottom: 1px solid black;\r\n        flex-direction: row;\r\n        justify-content: space-around;\r\n        background: #212529;\r\n    }\r\n    @media all and (max-width: 768px) {\r\n        border-bottom: 1px solid black;\r\n        justify-content: center;\r\n    }\r\n    h2 {\r\n        @media all and (max-width: 1140px) {\r\n            margin: 0;\r\n            font-size: 20px;\r\n        }\r\n    }\r\n\r\n    .link {\r\n        display: flex;\r\n        flex-direction: column;\r\n        @media all and (max-width: 1140px) {\r\n            flex-direction: row;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n    }\r\n    .info_img {\r\n        text-align: center;\r\n        color: #333;\r\n        img {\r\n            width: 80%;\r\n            @media all and (max-width: 1140px) {\r\n                display: none;\r\n            }\r\n        }\r\n        @media all and (max-width: 1140px) {\r\n            color: #dee2e6;\r\n        }\r\n    }\r\n    .link a {\r\n        display: flex;\r\n        text-decoration: none;\r\n        align-items: center;\r\n        &:active,\r\n        &:link,\r\n        &:visited {\r\n            color: #333;\r\n        }\r\n        padding-bottom: 15px;\r\n        @media all and (max-width: 1140px) {\r\n            padding-left: 10px;\r\n            padding-bottom: 0;\r\n            color: #dee2e6;\r\n\r\n            &:active,\r\n            &:link,\r\n            &:visited {\r\n                color: #dee2e6;\r\n            }\r\n        }\r\n        @media all and (max-width: 768px) {\r\n            display: none;\r\n            color: #dee2e6;\r\n        }\r\n    }\r\n\r\n    .link a img {\r\n        display: flex;\r\n        width: 1.5em;\r\n        height: 1.5em;\r\n        align-items: center;\r\n        margin-left: 10px;\r\n        border-radius: 30%;\r\n        @media all and (max-width: 1140px) {\r\n            width: 1em;\r\n            height: 1em;\r\n        }\r\n        @media all and (max-width: 1140px) {\r\n            width: 2em;\r\n            height: 2em;\r\n            text-align: center;\r\n        }\r\n        @media all and (max-width: 768px) {\r\n            width: 1.5em;\r\n            height: 1.5em;\r\n            text-align: center;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Info = ({ punish, combo, dc, name }: any) => {\r\n    return (\r\n        <InfoWrapper>\r\n            <div className=\"info_img\">\r\n                <img\r\n                    src={process.env.PUBLIC_URL + `/img/${name}.jpg`}\r\n                    alt=\"char\"\r\n                />\r\n                <h2>{name}</h2>\r\n            </div>\r\n            <div className=\"link\">\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={punish}>\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + `/img/youtube.png`}\r\n                        alt=\"youtube\"\r\n                    />\r\n                    딜캐\r\n                </a>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={combo}>\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + `/img/youtube.png`}\r\n                        alt=\"youtube\"\r\n                    />\r\n                    콤보\r\n                </a>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={dc}>\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + `/img/dc.png`}\r\n                        alt=\"dc\"\r\n                    />\r\n                    철마갤 캐릭터 팁\r\n                </a>\r\n            </div>\r\n        </InfoWrapper>\r\n    );\r\n};\r\n\r\nexport default Info;\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\ExTabs.tsx",["90"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport styled from 'styled-components';\r\nimport TabInfo from './TabInfo';\r\nconst TabPanelBlock = styled.div<{ shown: boolean }>`\r\n    ${({ shown }) => (shown ? `width:100%;  height:90%;` : 'width:0%')};\r\n    overflow-y: scroll;\r\n    -ms-overflow-style: none; /* IE and Edge */\r\n    scrollbar-width: none; /* Firefox */\r\n    ::-webkit-scrollbar {\r\n        display: none; /* Chrome, Safari, Opera*/\r\n    }\r\n`;\r\n\r\ninterface PanelProps {\r\n    children: any;\r\n    value: number;\r\n    index: number;\r\n}\r\n\r\nfunction TabPanel(props: PanelProps) {\r\n    const { children, value, index } = props;\r\n\r\n    return (\r\n        <TabPanelBlock\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            shown={value === index}\r\n        >\r\n            {value === index && <>{children} </>}\r\n        </TabPanelBlock>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst Root = styled.div`\r\n    flex-grow: 1;\r\n`;\r\nconst TabsBlock = styled(Tabs)`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: center;\r\n`;\r\nconst TabBlock = styled(Tab)`\r\n    flex: 1 1 auto;\r\n`;\r\n\r\ninterface TabsProps {\r\n    Data: any;\r\n}\r\n\r\ninterface dataProps {\r\n    header: string;\r\n    columns: string[];\r\n    data: any;\r\n}\r\n\r\nexport default function VerticalTabs({ Data }: TabsProps) {\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event: any, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const PunishInfo = [\r\n        {\r\n            header: '선자세 딜캐',\r\n            columns: ['프레임', '커맨드', '데미지', '판정', '히트이득'],\r\n            data: Data.standing,\r\n        },\r\n        {\r\n            header: '앉은자세 딜캐',\r\n            columns: ['프레임', '커맨드', '데미지', '판정', '히트이득'],\r\n            data: Data.up,\r\n        },\r\n    ];\r\n\r\n    const ThrowInfo = [\r\n        {\r\n            header: '잡기',\r\n            columns: ['커맨드', '프레임', '잡기풀기', '데미지', '설명'],\r\n            data: Data.Throw,\r\n        },\r\n    ];\r\n\r\n    const ComboInfo = [\r\n        {\r\n            header: '추가타',\r\n            columns: ['상황', '커맨드'],\r\n            data: Data.combo,\r\n        },\r\n        {\r\n            header: '추가타',\r\n            columns: ['상황', '커맨드'],\r\n            data: Data.Extrahit,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Root>\r\n            <TabsBlock value={value} onChange={handleChange} centered>\r\n                <TabBlock label=\"딜레이캐치\" />\r\n                <TabBlock label=\"콤보\" />\r\n                <TabBlock label=\"잡기\" />\r\n            </TabsBlock>\r\n            <TabPanel value={value} index={0}>\r\n                <TabInfo data={PunishInfo} />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <TabInfo data={ComboInfo} />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <TabInfo data={ThrowInfo} />\r\n            </TabPanel>\r\n        </Root>\r\n    );\r\n}\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\TabInfo.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\Table.tsx",["91","92"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Standing, Up } from '../../types/CharProps';\r\n\r\nconst TableContent = styled.table`\r\n    width: 90%;\r\n    border: 1px solid black;\r\n    border-collapse: collapse;\r\n    margin: 0 auto;\r\n    margin-bottom: 50px;\r\n`;\r\n\r\nconst TableHead = styled.th`\r\n    text-align: left;\r\n    padding: 5px;\r\n    border: 1px solid black;\r\n    border-collapse: collapse;\r\n`;\r\nconst TableRow = styled.tr`\r\n    padding: 5px;\r\n`;\r\nconst TableData = styled.td`\r\n    border: 1px solid black;\r\n    border-collapse: collapse;\r\n    padding: 5px;\r\n`;\r\n\r\ninterface dataProps {\r\n    header: string;\r\n    columns: string[];\r\n    data: any;\r\n}\r\n\r\nconst Table = ({ header, columns, data }: dataProps) => {\r\n    return (\r\n        <>\r\n            <h2>{header}</h2>\r\n            <TableContent>\r\n                <thead>\r\n                    <TableRow>\r\n                        {columns.map((column) => (\r\n                            <TableHead key={header + column}>\r\n                                {column}\r\n                            </TableHead>\r\n                        ))}\r\n                    </TableRow>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map((row: any, index: number) => (\r\n                        <TableRow key={index}>\r\n                            {Object.values(row).map((content: any, i) => (\r\n                                <TableData key={i}>{content}</TableData>\r\n                            ))}\r\n                        </TableRow>\r\n                    ))}\r\n                </tbody>\r\n            </TableContent>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\firebaseInit.tsx",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":118,"column":12,"nodeType":"99","messageId":"100","endLine":118,"endColumn":19},{"ruleId":"97","severity":1,"message":"101","line":118,"column":21,"nodeType":"99","messageId":"100","endLine":118,"endColumn":31},{"ruleId":"97","severity":1,"message":"102","line":119,"column":11,"nodeType":"99","messageId":"100","endLine":119,"endColumn":22},{"ruleId":"97","severity":1,"message":"103","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":13},{"ruleId":"97","severity":1,"message":"104","line":5,"column":10,"nodeType":"99","messageId":"100","endLine":5,"endColumn":19},{"ruleId":"97","severity":1,"message":"105","line":6,"column":10,"nodeType":"99","messageId":"100","endLine":6,"endColumn":19},{"ruleId":"97","severity":1,"message":"104","line":46,"column":10,"nodeType":"99","messageId":"100","endLine":46,"endColumn":19},{"ruleId":"97","severity":1,"message":"105","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":19},{"ruleId":"97","severity":1,"message":"106","line":59,"column":11,"nodeType":"99","messageId":"100","endLine":59,"endColumn":20},{"ruleId":"97","severity":1,"message":"107","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":18},{"ruleId":"97","severity":1,"message":"108","line":3,"column":20,"nodeType":"99","messageId":"100","endLine":3,"endColumn":22},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","'Opdata' is assigned a value but never used.","'Ops' is defined but never used.","'CharProps' is defined but never used.","'InfoProps' is defined but never used.","'dataProps' is defined but never used.","'Standing' is defined but never used.","'Up' is defined but never used.","no-global-assign","no-unsafe-negation"]