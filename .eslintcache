[{"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\reportWebVitals.js":"1","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\index.tsx":"2","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\App.tsx":"3","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\GlobalStyle.ts":"4","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Sidebar.tsx":"5","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\firebaseInit.tsx":"6","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Modal.tsx":"7","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\DBContext.tsx":"8","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\ModalContext.tsx":"9","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\Button.tsx":"10","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\hooks\\useInputValue.ts":"11","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\Icon.tsx":"12","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\UserContext.tsx":"13","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\UserProfile.tsx":"14","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\DBContextFunc.ts":"15","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\ExTabs.tsx":"16","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\TabInfo.tsx":"17","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\Table.tsx":"18","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\TableEdits.tsx":"19","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\TableRow.tsx":"20","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\TableEdit.tsx":"21","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Error.tsx":"22","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Home.tsx":"23","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharPage.tsx":"24","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Main.tsx":"25","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Info.tsx":"26","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\theme.ts":"27","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Loading.tsx":"28","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\CommandDescription.tsx":"29","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\ContactForm.tsx":"30"},{"size":375,"mtime":1619579956583,"results":"31","hashOfConfig":"32"},{"size":1205,"mtime":1625646076531,"results":"33","hashOfConfig":"32"},{"size":2790,"mtime":1625819273675,"results":"34","hashOfConfig":"32"},{"size":422,"mtime":1625646789675,"results":"35","hashOfConfig":"32"},{"size":3190,"mtime":1625744062996,"results":"36","hashOfConfig":"32"},{"size":1134,"mtime":1625662160069,"results":"37","hashOfConfig":"32"},{"size":5381,"mtime":1625737387922,"results":"38","hashOfConfig":"32"},{"size":2194,"mtime":1625727575850,"results":"39","hashOfConfig":"32"},{"size":2483,"mtime":1625661827979,"results":"40","hashOfConfig":"32"},{"size":1146,"mtime":1625659167531,"results":"41","hashOfConfig":"32"},{"size":449,"mtime":1625400670214,"results":"42","hashOfConfig":"32"},{"size":703,"mtime":1625661001476,"results":"43","hashOfConfig":"32"},{"size":1005,"mtime":1625743958306,"results":"44","hashOfConfig":"32"},{"size":2052,"mtime":1625662586020,"results":"45","hashOfConfig":"32"},{"size":8829,"mtime":1625744636714,"results":"46","hashOfConfig":"32"},{"size":6635,"mtime":1625810485945,"results":"47","hashOfConfig":"32"},{"size":1048,"mtime":1625734079552,"results":"48","hashOfConfig":"32"},{"size":4548,"mtime":1625819361087,"results":"49","hashOfConfig":"32"},{"size":1532,"mtime":1625662599602,"results":"50","hashOfConfig":"32"},{"size":3152,"mtime":1625744160285,"results":"51","hashOfConfig":"32"},{"size":1298,"mtime":1625647059261,"results":"52","hashOfConfig":"32"},{"size":641,"mtime":1625644577647,"results":"53","hashOfConfig":"32"},{"size":5677,"mtime":1625819196469,"results":"54","hashOfConfig":"32"},{"size":1328,"mtime":1625737434092,"results":"55","hashOfConfig":"32"},{"size":736,"mtime":1625658056987,"results":"56","hashOfConfig":"32"},{"size":3931,"mtime":1625658347420,"results":"57","hashOfConfig":"32"},{"size":910,"mtime":1625659140555,"results":"58","hashOfConfig":"32"},{"size":3229,"mtime":1625810976210,"results":"59","hashOfConfig":"32"},{"size":3153,"mtime":1625810430838,"results":"60","hashOfConfig":"32"},{"size":1609,"mtime":1625744924705,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"10ijnji",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"67"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"67"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\reportWebVitals.js",[],["127","128"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\index.tsx",[],["129","130"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\App.tsx",["131","132"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\GlobalStyle.ts",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Sidebar.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\firebaseInit.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Modal.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\DBContext.tsx",["133","134"],"import firebase from 'firebase';\r\nimport React, { createContext, Dispatch, useContext, useReducer } from 'react';\r\nimport db from '../firebaseInit';\r\nimport { CharProps } from '../types/CharProps';\r\n\r\ninterface StateProps {\r\n    charProps: CharProps;\r\n    loading: boolean;\r\n    error: any;\r\n}\r\n\r\nconst InitialState: StateProps = {\r\n    charProps: {\r\n        standing: [],\r\n        up: [],\r\n        combo: [],\r\n        WallCombo: [],\r\n        Throw: [],\r\n        Extrahit: [],\r\n        Info: [],\r\n        Pattern: [],\r\n        MainMove: [],\r\n    },\r\n    loading: false,\r\n    error: null,\r\n};\r\n\r\ntype Action =\r\n    | { type: 'LOADED'; payload: CharProps }\r\n    | { type: 'LOADING' }\r\n    | { type: 'ADD' }\r\n    | { type: 'ERROR'; error: any };\r\n\r\nexport type StateDispatch = Dispatch<Action>;\r\n\r\nconst DataContext = createContext<StateProps | null>(null);\r\nconst DataDispatchContext = createContext<StateDispatch | null>(null);\r\n\r\nfunction reducer(state: StateProps, action: Action) {\r\n    switch (action.type) {\r\n        case 'LOADED':\r\n            return {\r\n                ...state,\r\n                charProps: action.payload,\r\n                loading: false,\r\n            };\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case 'ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function StateProvider({ children }: { children: React.ReactNode }) {\r\n    const [state, dispatch] = useReducer(reducer, InitialState);\r\n    return (\r\n        <DataContext.Provider value={state}>\r\n            <DataDispatchContext.Provider value={dispatch}>\r\n                {children}\r\n            </DataDispatchContext.Provider>\r\n        </DataContext.Provider>\r\n    );\r\n}\r\nexport function useDBData() {\r\n    const data = useContext(DataContext);\r\n    if (!data) throw new Error('Cannot find Provider');\r\n    return data;\r\n}\r\nexport function useDBDispatch() {\r\n    const dispatch = useContext(DataDispatchContext);\r\n    if (!dispatch) throw new Error('Cannot find Provider');\r\n    return dispatch;\r\n}\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\ModalContext.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\Button.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\hooks\\useInputValue.ts",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\Icon.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\UserContext.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\UserProfile.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\DBContextFunc.ts",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\ExTabs.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\TabInfo.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\Table.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\TableEdits.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\TableRow.tsx",["135"],"import { faEdit, faEraser } from '@fortawesome/free-solid-svg-icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useModalDispatch } from '../../Context/ModalContext';\r\nimport { useUserData } from '../../Context/UserContext';\r\nimport useEditValue from '../../hooks/useInputValue';\r\nimport { Palette } from '../../styles/theme';\r\nimport CustomIcon from '../../styles/Icon';\r\nimport { TableControl, tagProperty } from './Table';\r\nimport TableEdits from './TableEdits';\r\nconst TableRow = styled.tr`\r\n    margin-bottom: -1px;\r\n    border-bottom: 1px solid #d1d1d1;\r\n    box-sizing: border-box;\r\n`;\r\nconst TableData = styled.td`\r\n    border-collapse: collapse;\r\n    padding: 10px 10px;\r\n`;\r\n\r\ninterface RowProps {\r\n    row: tagProperty;\r\n    charName: string;\r\n    tag: string;\r\n}\r\n\r\nconst TableRowData = ({ row, charName, tag }: RowProps) => {\r\n    const [edit, setEdit] = useState(false);\r\n    const { values, handleChange, setValue } = useEditValue(row);\r\n\r\n    useEffect(() => {\r\n        setValue(row);\r\n        setEdit(false);\r\n    }, [row]);\r\n\r\n    const modalProps = {\r\n        description: tag,\r\n        oldvalues: row,\r\n        values: values,\r\n        charName: charName,\r\n    };\r\n    const modalDispatch = useModalDispatch();\r\n    const user = useUserData();\r\n    const handleDelete = () => {\r\n        if (user !== null)\r\n            modalDispatch({ type: 'DELETE', payload: modalProps });\r\n        else modalDispatch({ type: 'NOTUSER' });\r\n        setValue(row);\r\n        setEdit(false);\r\n    };\r\n    const handleUpdate = () => {\r\n        if (user !== null) modalDispatch({ type: 'EDIT', payload: modalProps });\r\n        else modalDispatch({ type: 'NOTUSER' });\r\n        setValue(row);\r\n        setEdit(false);\r\n    };\r\n\r\n    return (\r\n        <TableRow>\r\n            {edit ? (\r\n                <>\r\n                    <TableEdits\r\n                        setEdit={setEdit}\r\n                        values={values}\r\n                        handleChange={handleChange}\r\n                        charName={charName}\r\n                        handleModal={handleUpdate}\r\n                    />\r\n                </>\r\n            ) : (\r\n                <>\r\n                    {Object.values(row).map((content: any, i) => (\r\n                        <TableData key={i}>{content}</TableData>\r\n                    ))}\r\n\r\n                    <TableControl onClick={() => setEdit(!edit)}>\r\n                        <CustomIcon\r\n                            icon={faEdit}\r\n                            color={Palette.green_1}\r\n                            hovercolor={Palette.green_2}\r\n                        ></CustomIcon>\r\n                    </TableControl>\r\n                    <TableControl onClick={handleDelete}>\r\n                        <CustomIcon\r\n                            icon={faEraser}\r\n                            color={Palette.red_1}\r\n                            hovercolor={Palette.red_2}\r\n                        ></CustomIcon>\r\n                    </TableControl>\r\n                </>\r\n            )}\r\n        </TableRow>\r\n    );\r\n};\r\n\r\nexport default React.memo(TableRowData);\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\TableEdit.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Error.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Home.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharPage.tsx",["136"],"import React, { useEffect } from 'react';\r\nimport Info from './pageComponents/Info';\r\nimport Main from './pageComponents/Main';\r\nimport styled from 'styled-components';\r\nimport { useParams } from 'react-router';\r\nimport { useDBData, useDBDispatch } from '../Context/DBContext';\r\nimport { LoadData } from '../Context/DBContextFunc';\r\nimport { Device } from '../styles/theme';\r\nimport { LoadingWithoutOverlay } from './Loading';\r\n\r\nconst CharWrap = styled.div`\r\n    display: flex;\r\n    height: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    @media ${Device.desktop} {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst Page = () => {\r\n    let { char }: { char: string } = useParams();\r\n    const charName = char.substring(1);\r\n    const { charProps, loading } = useDBData();\r\n    const tempDispatch = useDBDispatch();\r\n    useEffect(() => {\r\n        console.log('temp');\r\n        LoadData(charName, tempDispatch);\r\n        console.log(charProps);\r\n    }, [charName]);\r\n\r\n    return (\r\n        <CharWrap>\r\n            {loading ? (\r\n                <LoadingWithoutOverlay />\r\n            ) : (\r\n                <>\r\n                    <Info data={charProps?.Info} />\r\n                    <Main data={charProps!} />\r\n                </>\r\n            )}\r\n        </CharWrap>\r\n    );\r\n};\r\n\r\nexport default Page;\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Main.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Info.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\theme.ts",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Loading.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\CommandDescription.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\ContactForm.tsx",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":14,"column":10,"nodeType":"143","messageId":"144","endLine":14,"endColumn":19},{"ruleId":"141","severity":1,"message":"145","line":20,"column":10,"nodeType":"143","messageId":"144","endLine":20,"endColumn":18},{"ruleId":"141","severity":1,"message":"146","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":16},{"ruleId":"141","severity":1,"message":"147","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":10},{"ruleId":"148","severity":1,"message":"149","line":34,"column":8,"nodeType":"150","endLine":34,"endColumn":13,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"152","line":30,"column":8,"nodeType":"150","endLine":30,"endColumn":18,"suggestions":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"@typescript-eslint/no-unused-vars","'useDBData' is defined but never used.","Identifier","unusedVar","'NewProps' is defined but never used.","'firebase' is defined but never used.","'db' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.","ArrayExpression",["156"],"React Hook useEffect has missing dependencies: 'charProps' and 'tempDispatch'. Either include them or remove the dependency array.",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [row, setValue]",{"range":"162","text":"163"},"Update the dependencies array to be: [charName, charProps, tempDispatch]",{"range":"164","text":"165"},[1095,1100],"[row, setValue]",[975,985],"[charName, charProps, tempDispatch]"]