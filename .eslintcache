[{"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\reportWebVitals.js":"1","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\index.tsx":"2","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\App.tsx":"3","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\GlobalStyle.ts":"4","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Sidebar.tsx":"5","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\firebaseInit.tsx":"6","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Modal.tsx":"7","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\DBContext.tsx":"8","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\ModalContext.tsx":"9","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\Button.tsx":"10","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\hooks\\useInputValue.ts":"11","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\Icon.tsx":"12","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\UserContext.tsx":"13","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\UserProfile.tsx":"14","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\DBContextFunc.ts":"15","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\ExTabs.tsx":"16","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\TabInfo.tsx":"17","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\Table.tsx":"18","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\TableEdits.tsx":"19","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\TableRow.tsx":"20","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\TableEdit.tsx":"21","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Error.tsx":"22","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Home.tsx":"23","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharPage.tsx":"24","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Main.tsx":"25","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Info.tsx":"26","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\theme.ts":"27","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Loading.tsx":"28"},{"size":375,"mtime":1619579956583,"results":"29","hashOfConfig":"30"},{"size":1205,"mtime":1625646076531,"results":"31","hashOfConfig":"30"},{"size":2790,"mtime":1625734850342,"results":"32","hashOfConfig":"30"},{"size":422,"mtime":1625646789675,"results":"33","hashOfConfig":"30"},{"size":3191,"mtime":1625662382284,"results":"34","hashOfConfig":"30"},{"size":1134,"mtime":1625662160069,"results":"35","hashOfConfig":"30"},{"size":5381,"mtime":1625737387922,"results":"36","hashOfConfig":"30"},{"size":2194,"mtime":1625727575850,"results":"37","hashOfConfig":"30"},{"size":2483,"mtime":1625661827979,"results":"38","hashOfConfig":"30"},{"size":1146,"mtime":1625659167531,"results":"39","hashOfConfig":"30"},{"size":449,"mtime":1625400670214,"results":"40","hashOfConfig":"30"},{"size":703,"mtime":1625661001476,"results":"41","hashOfConfig":"30"},{"size":1041,"mtime":1625555058559,"results":"42","hashOfConfig":"30"},{"size":2052,"mtime":1625662586020,"results":"43","hashOfConfig":"30"},{"size":8871,"mtime":1625734552336,"results":"44","hashOfConfig":"30"},{"size":6635,"mtime":1625734748759,"results":"45","hashOfConfig":"30"},{"size":1048,"mtime":1625734079552,"results":"46","hashOfConfig":"30"},{"size":4317,"mtime":1625734600991,"results":"47","hashOfConfig":"30"},{"size":1532,"mtime":1625662599602,"results":"48","hashOfConfig":"30"},{"size":3151,"mtime":1625662604887,"results":"49","hashOfConfig":"30"},{"size":1298,"mtime":1625647059261,"results":"50","hashOfConfig":"30"},{"size":641,"mtime":1625644577647,"results":"51","hashOfConfig":"30"},{"size":2384,"mtime":1625648070111,"results":"52","hashOfConfig":"30"},{"size":1328,"mtime":1625737434092,"results":"53","hashOfConfig":"30"},{"size":736,"mtime":1625658056987,"results":"54","hashOfConfig":"30"},{"size":3931,"mtime":1625658347420,"results":"55","hashOfConfig":"30"},{"size":910,"mtime":1625659140555,"results":"56","hashOfConfig":"30"},{"size":3137,"mtime":1625737552886,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"10ijnji",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\reportWebVitals.js",[],["121","122"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\index.tsx",[],["123","124"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\App.tsx",["125","126"],"import styled from 'styled-components';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Sidebar from './components/Sidebar';\r\nimport { useCallback, useState } from 'react';\r\nimport Page from './components/CharPage';\r\nimport React from 'react';\r\nimport {\r\n    faBars,\r\n    faTimes,\r\n    IconDefinition,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { GlobalStyle } from './styles/GlobalStyle';\r\nimport { useDBData } from './Context/DBContext';\r\nimport Error from './components/Error';\r\nimport Modal from './components/Modal';\r\nimport { useModalData } from './Context/ModalContext';\r\nimport CustomIcon from './styles/Icon';\r\nimport { Device, Palette } from './styles/theme';\r\nimport { NewProps } from './Context/DBContextFunc';\r\nconst Wrapper = styled.div`\r\n    background: #e8e8e8;\r\n`;\r\n\r\nconst PageContent = styled.div`\r\n    position: absolute;\r\n    height: 100%;\r\n    width: calc(100% - 240px);\r\n    left: 240px;\r\n    @media ${Device.desktop} {\r\n        left: 0;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\ninterface MenuProps {\r\n    onClick: () => void;\r\n    icon: IconDefinition;\r\n}\r\n\r\nconst MenuButtonBlock = styled(CustomIcon)<MenuProps>`\r\n    position: fixed;\r\n    top: 2.5%;\r\n    left: 20px;\r\n    z-index: 999;\r\n    font-size: 20px;\r\n    color: #fff;\r\n    visibility: hidden;\r\n    cursor: pointer;\r\n    @media ${Device.desktop} {\r\n        visibility: visible;\r\n    }\r\n`;\r\n\r\nconst Overlay = styled.div<{ toggle: boolean }>`\r\n    width: 100%;\r\n    position: fixed;\r\n    height: 100%;\r\n    z-index: 996;\r\n    background: ${Palette.overlay};\r\n    visibility: ${(props) => (props.toggle ? 'visible' : 'hidden')};\r\n`;\r\n\r\nfunction App() {\r\n    const [toggle, setToggle] = useState(false);\r\n    const { open } = useModalData();\r\n    const handleToggle = useCallback(() => {\r\n        setToggle(false);\r\n    }, []);\r\n    return (\r\n        <>\r\n            <title>Tekken_info 0.1.0</title>\r\n            <GlobalStyle />\r\n            <Wrapper>\r\n                <MenuButtonBlock\r\n                    icon={toggle ? faTimes : faBars}\r\n                    onClick={() => setToggle(!toggle)}\r\n                />\r\n                <Sidebar toggle={toggle} handleToggle={handleToggle} />\r\n                <Overlay toggle={toggle} onClick={handleToggle} />\r\n\r\n                <PageContent>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact={true} component={Home} />\r\n                        <Route path=\"/data/:char\" exact={true}>\r\n                            <Page />\r\n                        </Route>\r\n                        <Route component={Error} />\r\n                    </Switch>\r\n                </PageContent>\r\n                {open && <Modal />}\r\n            </Wrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\GlobalStyle.ts",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Sidebar.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\firebaseInit.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Modal.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\DBContext.tsx",["127","128"],"import firebase from 'firebase';\r\nimport React, { createContext, Dispatch, useContext, useReducer } from 'react';\r\nimport db from '../firebaseInit';\r\nimport { CharProps } from '../types/CharProps';\r\n\r\ninterface StateProps {\r\n    charProps: CharProps;\r\n    loading: boolean;\r\n    error: any;\r\n}\r\n\r\nconst InitialState: StateProps = {\r\n    charProps: {\r\n        standing: [],\r\n        up: [],\r\n        combo: [],\r\n        WallCombo: [],\r\n        Throw: [],\r\n        Extrahit: [],\r\n        Info: [],\r\n        Pattern: [],\r\n        MainMove: [],\r\n    },\r\n    loading: false,\r\n    error: null,\r\n};\r\n\r\ntype Action =\r\n    | { type: 'LOADED'; payload: CharProps }\r\n    | { type: 'LOADING' }\r\n    | { type: 'ADD' }\r\n    | { type: 'ERROR'; error: any };\r\n\r\nexport type StateDispatch = Dispatch<Action>;\r\n\r\nconst DataContext = createContext<StateProps | null>(null);\r\nconst DataDispatchContext = createContext<StateDispatch | null>(null);\r\n\r\nfunction reducer(state: StateProps, action: Action) {\r\n    switch (action.type) {\r\n        case 'LOADED':\r\n            return {\r\n                ...state,\r\n                charProps: action.payload,\r\n                loading: false,\r\n            };\r\n        case 'LOADING':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case 'ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function StateProvider({ children }: { children: React.ReactNode }) {\r\n    const [state, dispatch] = useReducer(reducer, InitialState);\r\n    return (\r\n        <DataContext.Provider value={state}>\r\n            <DataDispatchContext.Provider value={dispatch}>\r\n                {children}\r\n            </DataDispatchContext.Provider>\r\n        </DataContext.Provider>\r\n    );\r\n}\r\nexport function useDBData() {\r\n    const data = useContext(DataContext);\r\n    if (!data) throw new Error('Cannot find Provider');\r\n    return data;\r\n}\r\nexport function useDBDispatch() {\r\n    const dispatch = useContext(DataDispatchContext);\r\n    if (!dispatch) throw new Error('Cannot find Provider');\r\n    return dispatch;\r\n}\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\ModalContext.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\Button.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\hooks\\useInputValue.ts",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\Icon.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\UserContext.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\UserProfile.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\Context\\DBContextFunc.ts",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\ExTabs.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\TabInfo.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\Table.tsx",["129"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { TableItemProps } from './TabInfo';\r\nimport TableRowData from './TableRow';\r\nimport { useParams } from 'react-router';\r\nimport TableEdits from './TableEdits';\r\nimport useEditValue from '../../hooks/useInputValue';\r\nimport CustomIcon from '../../styles/Icon';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Device, Palette } from '../../styles/theme';\r\nimport { useUserData } from '../../Context/UserContext';\r\nimport { useModalDispatch } from '../../Context/ModalContext';\r\n\r\nconst TableContent = styled.table`\r\n    width: 90%;\r\n    border-collapse: collapse;\r\n    border-radius: 10px;\r\n    margin: 0 auto;\r\n    margin-bottom: 20px;\r\n    @media ${Device.tablet} {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst TableHead = styled.th`\r\n    text-align: left;\r\n    padding: 5px;\r\n    border-collapse: collapse;\r\n`;\r\nconst TableRow = styled.tr`\r\n    margin-bottom: -1px;\r\n    border: 1px solid ${Palette.border_1};\r\n    box-sizing: border-box;\r\n`;\r\nexport const TableControl = styled.td`\r\n    width: 30px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n`;\r\nconst TableAdd = styled.tr`\r\n    border: none;\r\n    width: 100%;\r\n    td {\r\n        text-align: center;\r\n        font-size: 2rem;\r\n    }\r\n`;\r\n\r\ninterface dataProps {\r\n    item: TableItemProps;\r\n}\r\n\r\nexport interface tagProperty {\r\n    command?: string;\r\n    frame?: string;\r\n    damage?: string;\r\n    way?: string;\r\n    state?: string;\r\n    range?: string;\r\n    description?: string;\r\n}\r\n\r\nconst Table = ({ item }: dataProps) => {\r\n    const { header, columns, data, tag } = item;\r\n    const initialValue: tagProperty = tag.detail.reduce(\r\n        (acc: any, cur) => ((acc[cur] = ''), acc),\r\n        {}\r\n    );\r\n    let { char }: { char: string } = useParams();\r\n    const charName = char.substring(1);\r\n    const colSpan = tag.detail.length;\r\n    const user = useUserData();\r\n    const modalDispatch = useModalDispatch();\r\n    const [edit, setEdit] = useState(false);\r\n    const { values, setValue, handleChange } = useEditValue(initialValue);\r\n    const modalProps = {\r\n        description: tag.description,\r\n        values: values,\r\n        charName: charName,\r\n    };\r\n\r\n    const handleModal = () => {\r\n        if (user !== null) {\r\n            modalDispatch({ type: 'ADD', payload: modalProps });\r\n        }\r\n        setEdit(false);\r\n        setValue(initialValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h2>{header}</h2>\r\n            <TableContent>\r\n                <thead>\r\n                    <TableRow>\r\n                        {columns.map((column, index) => (\r\n                            <TableHead key={header + index + column}>\r\n                                {column}\r\n                            </TableHead>\r\n                        ))}\r\n                    </TableRow>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map((row: any, index: number) => (\r\n                        <TableRowData\r\n                            key={index}\r\n                            row={row}\r\n                            charName={charName}\r\n                            tag={tag.description}\r\n                        />\r\n                    ))}\r\n                    {edit ? (\r\n                        <TableRow>\r\n                            <TableEdits\r\n                                setEdit={setEdit}\r\n                                values={values}\r\n                                handleChange={handleChange}\r\n                                charName={charName}\r\n                                handleModal={handleModal}\r\n                            />\r\n                        </TableRow>\r\n                    ) : (\r\n                        <TableAdd>\r\n                            <td onClick={() => setEdit(true)} colSpan={colSpan}>\r\n                                <CustomIcon\r\n                                    icon={faPlus}\r\n                                    color={Palette.gray_1}\r\n                                    hovercolor={Palette.gray_2}\r\n                                />\r\n                            </td>\r\n                        </TableAdd>\r\n                    )}\r\n                </tbody>\r\n            </TableContent>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default React.memo(Table);\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\TableEdits.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\TableRow.tsx",["130"],"import { faEdit, faEraser } from '@fortawesome/free-solid-svg-icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useModalDispatch } from '../../Context/ModalContext';\r\nimport { useUserData } from '../../Context/UserContext';\r\nimport useEditValue from '../../hooks/useInputValue';\r\nimport { Palette } from '../../styles/theme';\r\nimport CustomIcon from '../../styles/Icon';\r\nimport { TableControl, tagProperty } from './Table';\r\nimport TableEdits from './TableEdits';\r\nconst TableRow = styled.tr`\r\n    margin-bottom: -1px;\r\n    border-bottom: 1px solid #d1d1d1;\r\n    box-sizing: border-box;\r\n`;\r\nconst TableData = styled.td`\r\n    border-collapse: collapse;\r\n    padding: 10px 5px;\r\n`;\r\n\r\ninterface RowProps {\r\n    row: tagProperty;\r\n    charName: string;\r\n    tag: string;\r\n}\r\n\r\nconst TableRowData = ({ row, charName, tag }: RowProps) => {\r\n    const [edit, setEdit] = useState(false);\r\n    const { values, handleChange, setValue } = useEditValue(row);\r\n\r\n    useEffect(() => {\r\n        setValue(row);\r\n        setEdit(false);\r\n    }, [row]);\r\n\r\n    const modalProps = {\r\n        description: tag,\r\n        oldvalues: row,\r\n        values: values,\r\n        charName: charName,\r\n    };\r\n    const modalDispatch = useModalDispatch();\r\n    const user = useUserData();\r\n    const handleDelete = () => {\r\n        if (user !== null)\r\n            modalDispatch({ type: 'DELETE', payload: modalProps });\r\n        else modalDispatch({ type: 'NOTUSER' });\r\n        setValue(row);\r\n        setEdit(false);\r\n    };\r\n    const handleUpdate = () => {\r\n        if (user !== null) modalDispatch({ type: 'EDIT', payload: modalProps });\r\n        else modalDispatch({ type: 'NOTUSER' });\r\n        setValue(row);\r\n        setEdit(false);\r\n    };\r\n\r\n    return (\r\n        <TableRow>\r\n            {edit ? (\r\n                <>\r\n                    <TableEdits\r\n                        setEdit={setEdit}\r\n                        values={values}\r\n                        handleChange={handleChange}\r\n                        charName={charName}\r\n                        handleModal={handleUpdate}\r\n                    />\r\n                </>\r\n            ) : (\r\n                <>\r\n                    {Object.values(row).map((content: any, i) => (\r\n                        <TableData key={i}>{content}</TableData>\r\n                    ))}\r\n\r\n                    <TableControl onClick={() => setEdit(!edit)}>\r\n                        <CustomIcon\r\n                            icon={faEdit}\r\n                            color={Palette.green_1}\r\n                            hovercolor={Palette.green_2}\r\n                        ></CustomIcon>\r\n                    </TableControl>\r\n                    <TableControl onClick={handleDelete}>\r\n                        <CustomIcon\r\n                            icon={faEraser}\r\n                            color={Palette.red_1}\r\n                            hovercolor={Palette.red_2}\r\n                        ></CustomIcon>\r\n                    </TableControl>\r\n                </>\r\n            )}\r\n        </TableRow>\r\n    );\r\n};\r\n\r\nexport default React.memo(TableRowData);\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\TableComponents\\TableEdit.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Error.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Home.tsx",["131","132"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ContactFrom from './pageComponents/ContactForm';\r\nimport CommandDescription from './pageComponents/CommandDescription';\r\nimport { Device } from '../styles/theme';\r\nconst HomeWrapper = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .wrapper {\r\n        width: calc(70% + 200px);\r\n        height: 90%;\r\n        background: #fff;\r\n        display: flex;\r\n        flex-direction: column;\r\n        @media ${Device.desktop} {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Header = styled.div`\r\n    width: 100%;\r\n    font-size: 50px;\r\n    font-weight: 900;\r\n    height: 15%;\r\n    display: table-cell;\r\n    vertical-align: middle;\r\n    text-align: center;\r\n    @media ${Device.desktop} {\r\n        height: 10%;\r\n        padding: 0;\r\n        font-size: 20px;\r\n        background-color: #333;\r\n        color: #fff;\r\n    }\r\n`;\r\n\r\nconst Content = styled.div`\r\n    width: 100%;\r\n    height: 80%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    @media ${Device.desktop} {\r\n        flex-direction: column;\r\n        height: 100%;\r\n        justify-content: space-between;\r\n    }\r\n    @media ${Device.tablet} {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n`;\r\nconst ContentItem = styled.div`\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 45%;\r\n    height: 80%;\r\n    font-size: 20px;\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\r\n    padding: 10px;\r\n    @media ${Device.desktop} {\r\n        width: calc(100% - 2px);\r\n        padding: 0;\r\n        height: 30%;\r\n        border-radius: 0;\r\n        border: 0 0 0 1px solid black;\r\n    }\r\n    @media ${Device.tablet} {\r\n        width: calc(100% - 2px);\r\n        padding: 0;\r\n        height: 33%;\r\n        border-radius: 0;\r\n        border: 0 0 0 1px solid black;\r\n    }\r\n`;\r\n\r\nconst Home = () => {\r\n    return (\r\n        <HomeWrapper>\r\n            <div className=\"wrapper\">\r\n                <Header>Tekken Info</Header>\r\n                <Content>\r\n                    <ContentItem></ContentItem>\r\n                </Content>\r\n            </div>\r\n        </HomeWrapper>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharPage.tsx",["133"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Main.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Info.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\theme.ts",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Loading.tsx",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":14,"column":10,"nodeType":"140","messageId":"141","endLine":14,"endColumn":19},{"ruleId":"138","severity":1,"message":"142","line":20,"column":10,"nodeType":"140","messageId":"141","endLine":20,"endColumn":18},{"ruleId":"138","severity":1,"message":"143","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":16},{"ruleId":"138","severity":1,"message":"144","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":10},{"ruleId":"145","severity":1,"message":"146","line":67,"column":44,"nodeType":"147","messageId":"148","endLine":67,"endColumn":45},{"ruleId":"149","severity":1,"message":"150","line":34,"column":8,"nodeType":"151","endLine":34,"endColumn":13,"suggestions":"152"},{"ruleId":"138","severity":1,"message":"153","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":19},{"ruleId":"138","severity":1,"message":"154","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":26},{"ruleId":"149","severity":1,"message":"155","line":30,"column":8,"nodeType":"151","endLine":30,"endColumn":18,"suggestions":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"@typescript-eslint/no-unused-vars","'useDBData' is defined but never used.","Identifier","unusedVar","'NewProps' is defined but never used.","'firebase' is defined but never used.","'db' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.","ArrayExpression",["159"],"'ContactFrom' is defined but never used.","'CommandDescription' is defined but never used.","React Hook useEffect has missing dependencies: 'charProps' and 'tempDispatch'. Either include them or remove the dependency array.",["160"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [row, setValue]",{"range":"165","text":"166"},"Update the dependencies array to be: [charName, charProps, tempDispatch]",{"range":"167","text":"168"},[1094,1099],"[row, setValue]",[975,985],"[charName, charProps, tempDispatch]"]