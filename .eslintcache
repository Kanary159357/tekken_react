[{"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\reportWebVitals.js":"1","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\index.tsx":"2","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\App.tsx":"3","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\GlobalStyle.ts":"4","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\Home.tsx":"5","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Sidebar.tsx":"6","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\CharPage.tsx":"7","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\SiteUsage.tsx":"8","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Main.tsx":"9","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\CommandDescription.tsx":"10","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\ContactForm.tsx":"11","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Info.tsx":"12","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\ExTabs.tsx":"13","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\TabInfo.tsx":"14","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\Table.tsx":"15","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\firebaseInit.tsx":"16","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\DBContext.tsx":"17","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\TableRow.tsx":"18"},{"size":375,"mtime":1619579956583,"results":"19","hashOfConfig":"20"},{"size":610,"mtime":1624610379030,"results":"21","hashOfConfig":"20"},{"size":4750,"mtime":1625021196159,"results":"22","hashOfConfig":"20"},{"size":207,"mtime":1621134908325,"results":"23","hashOfConfig":"20"},{"size":2820,"mtime":1621135348678,"results":"24","hashOfConfig":"20"},{"size":2414,"mtime":1624865727749,"results":"25","hashOfConfig":"20"},{"size":1045,"mtime":1625021184126,"results":"26","hashOfConfig":"20"},{"size":1114,"mtime":1621135234914,"results":"27","hashOfConfig":"20"},{"size":615,"mtime":1624610533605,"results":"28","hashOfConfig":"20"},{"size":1704,"mtime":1621135259135,"results":"29","hashOfConfig":"20"},{"size":2270,"mtime":1621135254554,"results":"30","hashOfConfig":"20"},{"size":4115,"mtime":1624863978354,"results":"31","hashOfConfig":"20"},{"size":3813,"mtime":1624951351120,"results":"32","hashOfConfig":"20"},{"size":679,"mtime":1624947052363,"results":"33","hashOfConfig":"20"},{"size":3870,"mtime":1625031971299,"results":"34","hashOfConfig":"20"},{"size":501,"mtime":1624515459430,"results":"35","hashOfConfig":"20"},{"size":3089,"mtime":1624955428757,"results":"36","hashOfConfig":"20"},{"size":951,"mtime":1625032016457,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"10ijnji",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\reportWebVitals.js",[],["78","79"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\index.tsx",[],["80","81"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\App.tsx",["82"],"import styled from 'styled-components';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from './components/Page/Home';\r\nimport Sidebar from './components/Sidebar';\r\nimport { useEffect, useState } from 'react';\r\nimport Page from './components/Page/CharPage';\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faBars,\r\n    faTimes,\r\n    IconDefinition,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { GlobalStyle } from './styles/GlobalStyle';\r\nimport db from './firebaseInit';\r\nimport { CharProps } from './types/CharProps';\r\nimport { StateProvider } from './DBContext';\r\nconst Wrapper = styled.div`\r\n    background: #e8e8e8;\r\n`;\r\n\r\nconst PageContent = styled.div`\r\n    position: absolute;\r\n    height: 100%;\r\n    width: calc(100% - 240px);\r\n    left: 240px;\r\n    background: #808080;\r\n    @media all and (max-width: 1140px) {\r\n        left: 0;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\ninterface MenuProps {\r\n    onClick: () => void;\r\n    icon: IconDefinition;\r\n}\r\n\r\nconst MenuButtonBlock = styled(FontAwesomeIcon)<MenuProps>`\r\n    position: fixed;\r\n    top: 2.5%;\r\n    left: 20px;\r\n    z-index: 999;\r\n    font-size: 20px;\r\n    color: #fff;\r\n    visibility: hidden;\r\n    @media all and (max-width: 1140px) {\r\n        visibility: visible;\r\n    }\r\n`;\r\n\r\nconst Overlay = styled.div<{ toggle: boolean }>`\r\n    width: 100%;\r\n    position: fixed;\r\n    height: 100%;\r\n    z-index: 996;\r\n    background: rgba(122, 122, 122, 0.5);\r\n    visibility: ${(props) => (props.toggle ? 'visible' : 'hidden')};\r\n`;\r\n\r\nconst CharNames = [\r\n    'Akuma',\r\n    'Alisa',\r\n    'Anna',\r\n    'ArmorKing',\r\n    'Asuka',\r\n    'Bob',\r\n    'Bryan',\r\n    'Cladio',\r\n    'DevilJin',\r\n    'Dragunov',\r\n    'Eddy',\r\n    'Eliza',\r\n    'Feng',\r\n    'Geese',\r\n    'Gigas',\r\n    'Heihachi',\r\n    'Hworang',\r\n    'Jack7',\r\n    'Jin',\r\n    'Josie',\r\n    'Julia',\r\n    'Katarina',\r\n    'Kazumi',\r\n    'Kazuya',\r\n    'King',\r\n    'Kuma',\r\n    'Kunimitsu',\r\n    'Lars',\r\n    'Law',\r\n    'Lee',\r\n    'Lei',\r\n    'Leo',\r\n    'Lidia',\r\n    'Lili',\r\n    'Lucky',\r\n    'Marduk',\r\n    'MasterRaven',\r\n    'Miguel',\r\n    'Negan',\r\n    'Nina',\r\n    'Noctis',\r\n    'Paul',\r\n    'Shaheen',\r\n    'Steve',\r\n    'Xiaoyu',\r\n    'Yoshimitsu',\r\n];\r\n\r\nfunction App() {\r\n    const [toggle, setToggle] = useState(false);\r\n    const [curChar, setCurChar] = useState('Jin');\r\n    const [data, setData] = useState<CharProps>();\r\n    useEffect(() => {\r\n        async function getFromDocs() {\r\n            const ascorder = (arr: any[]) => {\r\n                return arr.map((cur: { [key: string]: string }) =>\r\n                    Object.keys(cur)\r\n                        .sort()\r\n                        .reduce((obj: any, key: string) => {\r\n                            obj[key] = cur[key];\r\n                            return obj;\r\n                        }, {})\r\n                );\r\n            };\r\n            const data = await db\r\n                .collection('Character')\r\n                .doc(curChar)\r\n                .get()\r\n                .then((snap) => {\r\n                    return snap.data() as CharProps;\r\n                });\r\n            data.combo = ascorder(data.combo);\r\n            data.WallCombo = ascorder(data.combo);\r\n            data.Throw = ascorder(data.Throw);\r\n            data.up = ascorder(data.up);\r\n            data.standing = ascorder(data.standing);\r\n            data.Extrahit = ascorder(data.Extrahit);\r\n            setData(data);\r\n        }\r\n        getFromDocs();\r\n    }, [curChar]);\r\n    const onCharChange = (text: string) => {\r\n        setCurChar(text);\r\n    };\r\n\r\n    return (\r\n        <StateProvider>\r\n            <title>Tekken_info 0.1.0</title>\r\n            <GlobalStyle />\r\n            <Wrapper>\r\n                <MenuButtonBlock\r\n                    icon={toggle ? faTimes : faBars}\r\n                    onClick={() => {\r\n                        setToggle(!toggle);\r\n                    }}\r\n                />\r\n                <Sidebar\r\n                    toggle={toggle}\r\n                    Data={CharNames}\r\n                    onCharChange={onCharChange}\r\n                />\r\n                <Overlay\r\n                    toggle={toggle}\r\n                    onClick={() => {\r\n                        setToggle(!toggle);\r\n                    }}\r\n                />\r\n                <PageContent>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact={true} component={Home} />\r\n\r\n                        <Route path=\"/data/:char\" exact={true}>\r\n                            <Page />\r\n                        </Route>\r\n                    </Switch>\r\n                </PageContent>\r\n            </Wrapper>\r\n        </StateProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\styles\\GlobalStyle.ts",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\Home.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Sidebar.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\Page\\CharPage.tsx",["83","84","85"],"import React, { useEffect } from 'react';\r\nimport Info from '../pageComponents/Info';\r\nimport Main from '../pageComponents/Main';\r\nimport styled from 'styled-components';\r\nimport { CharProps } from '../../types/CharProps';\r\nimport { useParams } from 'react-router';\r\nimport { AddData, LoadData, useDBData, useDBDispatch } from '../../DBContext';\r\n\r\nconst CharWrap = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    @media all and (max-width: 1140px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nconst Page = () => {\r\n    let { char }: { char: string } = useParams();\r\n    const charName = char.substring(1);\r\n    const tempdata = useDBData().charProps;\r\n    const tempDispatch = useDBDispatch();\r\n    useEffect(() => {\r\n        LoadData(charName, tempDispatch);\r\n    }, [charName]);\r\n\r\n    return (\r\n        <CharWrap>\r\n            <Info data={tempdata?.Info} />\r\n            <Main data={tempdata!} />\r\n        </CharWrap>\r\n    );\r\n};\r\n\r\nexport default Page;\r\n","C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\SiteUsage.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Main.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\CommandDescription.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\ContactForm.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\pageComponents\\Info.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\ExTabs.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\TabInfo.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\Table.tsx",["86","87","88","89","90"],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\firebaseInit.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\DBContext.tsx",[],"C:\\Users\\kkkk\\Documents\\GitHub\\Made\\tekken_react\\src\\components\\CharInfo\\TableRow.tsx",["91","92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":113,"column":12,"nodeType":"99","messageId":"100","endLine":113,"endColumn":16},{"ruleId":"97","severity":1,"message":"101","line":5,"column":10,"nodeType":"99","messageId":"100","endLine":5,"endColumn":19},{"ruleId":"97","severity":1,"message":"102","line":7,"column":10,"nodeType":"99","messageId":"100","endLine":7,"endColumn":17},{"ruleId":"103","severity":1,"message":"104","line":27,"column":8,"nodeType":"105","endLine":27,"endColumn":18,"suggestions":"106"},{"ruleId":"97","severity":1,"message":"102","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":17},{"ruleId":"97","severity":1,"message":"101","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":19},{"ruleId":"97","severity":1,"message":"107","line":30,"column":7,"nodeType":"99","messageId":"100","endLine":30,"endColumn":16},{"ruleId":"97","severity":1,"message":"108","line":35,"column":7,"nodeType":"99","messageId":"100","endLine":35,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":90,"column":44,"nodeType":"111","messageId":"112","endLine":90,"endColumn":45},{"ruleId":"97","severity":1,"message":"113","line":26,"column":12,"nodeType":"99","messageId":"100","endLine":26,"endColumn":16},{"ruleId":"97","severity":1,"message":"114","line":26,"column":18,"nodeType":"99","messageId":"100","endLine":26,"endColumn":25},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'CharProps' is defined but never used.","'AddData' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tempDispatch'. Either include it or remove the dependency array.","ArrayExpression",["117"],"'TableData' is assigned a value but never used.","'TableControl' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'edit' is assigned a value but never used.","'setEdit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [charName, tempDispatch]",{"range":"120","text":"121"},[855,865],"[charName, tempDispatch]"]